image: docker:20.10.14
services:
  - docker:20.10.14-dind

variables:
  GIT_STRATEGY: clone
  # Make sure that you get tags from git repository otherwise the release
  # Gradle plugin will not be able to create the next version number: 
  GIT_FETCH_EXTRA_FLAGS: --tags 
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.java.home=/opt/openjdk-17"
  APP_VERSION: $CI_PIPELINE_IID
  TAG_APP: flexpay-funding
  TAG_DEV: registry.flexpay.co.za:5000/$TAG_APP-dev
  TAG_PREPROD: registry.flexpay.co.za:5000/$TAG_APP-preprod
  TAG_PROD: registry.flexpay.co.za:5000/$TAG_APP-prod
  TAG_LATEST: registry.flexpay.co.za:5000/$TAG_APP:latest
  TAG_COMMIT: registry.flexpay.co.za:5000/$TAG_APP/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

before_script:
  - echo `pwd` # debug
  - echo "$CI_COMMIT_REF_SLUG, $CI_MERGE_REQUEST_TARGET_BRANCH_NAME, $CI_MERGE_REQUEST_TARGET_BRANCH_NAME, $CI_COMMIT_BRANCH, $CI_BUILD_NAME, $CI_BUILD_REF_NAME, $CI_COMMIT_REF_NAME, $CI_BUILD_STAGE, $CI_REGISTRY, $CI_REGISTRY_IMAGE, $CI_COMMIT_REF_NAME, $CI_COMMIT_SHORT_SHA, $CI_OPEN_MERGE_REQUESTS, $CI_PIPELINE_SOURCE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - echo $TAG_PREPROD
  - echo "$FP_CI_REGISTRY_PASSWORD | docker login  -u $FP_CI_REGISTRY_USER $FP_CI_REGISTRY --password-stdin"


stages:
  - build
  - test
  - package
  - deploy


include:
  - template: Security/SAST.gitlab-ci.yml


build_dev:
  stage: build
  image: openjdk:17-alpine
  script:
    - ./gradlew  build 
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 2 hrs


spotbugs-sast:
  dependencies:
    - build_dev
  variables:
    SECURE_LOG_LEVEL: "debug"
    SAST_ANALYZER_IMAGE: "registry.gitlab.com/gitlab-org/security-products/analyzers/spotbugs:2.28.4"
    COMPILE: "false"
  artifacts:
    reports:
      sast: gl-sast-report.json


.test:
  stage: test
  image: openjdk:17-alpine
  script: ./gradlew check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

build dev image:
  stage: package
  script:
    - echo "Building dev image"
    - echo $CI_COMMIT_BRANCH
    - echo $FP_CI_REGISTRY_PASSWORD | docker login  -u $FP_CI_REGISTRY_USER $FP_CI_REGISTRY --password-stdin
    - docker build  -t "$TAG_DEV" -t "$TAG_DEV:$APP_VERSION" .
    - docker image ls
    - docker push --all-tags $TAG_DEV
  except:
    - /^release/

  # rules:
  #   - if: '$CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE == "push"'
      # when: never


build preprod image:
  stage: package
  script:
    - echo "Building Preprod image"
    - echo $CI_COMMIT_BRANCH
    - echo $FP_CI_REGISTRY_PASSWORD | docker login  -u $FP_CI_REGISTRY_USER $FP_CI_REGISTRY --password-stdin
    - docker build  -t "$TAG_PREPROD" -t "$TAG_PREPROD:$APP_VERSION" .
    - docker image ls
    - docker push --all-tags $TAG_PREPROD
  # rules:
  #   - if: '$CI_COMMIT_REF_NAME =~ "/^release/" && $CI_PIPELINE_SOURCE == "push"'
  only:
    # - release-*
    - "/^release/"


deploy_devsrv:
  image: docker:20.10.14
  services:
    - docker:20.10.14-dind
  stage: deploy
  script:
    - apk update && apk add openssh-client
    - mkdir -p ~/.ssh
    - echo "$DEV_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    # - echo $FP_CI_REGISTRY_PASSWORD | ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@docsrv" 'docker login  -u $FP_CI_REGISTRY_USER $FP_CI_REGISTRY --password-stdin'
    - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@fp-dev-dh1" 'cd /opt/docker/containers/flexpay-funding && docker-compose down --remove-orphans'
    - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@fp-dev-dh1" 'docker rmi registry.flexpay.co.za:5000/flexpay-funding-dev'
    - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@fp-dev-dh1" 'cd /opt/docker/containers/flexpay-funding && docker-compose up -d'
    
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop" && $CI_PIPELINE_SOURCE == "push"'
    
    # refs:
    #   - merge_requests


deploy_preprod:
  stage: deploy
  dependencies:
    - build dev image
  script:
    - apk update && apk add openssh-client
    - mkdir -p ~/.ssh
    - echo "$DEV_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    - ssh-add ~/.ssh/id_rsa
    # - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@registry.flexpay.co.za"  "docker login  -u $FP_CI_REGISTRY_USER -p $FP_CI_REGISTRY_PASSWORD $FP_CI_REGISTRY"
    # - echo $FP_CI_REGISTRY_PASSWORD | ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@docker86-h1"  'docker login  -u $FP_CI_REGISTRY_USER $FP_CI_REGISTRY --password-stdin'
    - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@docker86-h1" 'cd /opt/docker/containers/flexpay-funding && docker-compose down --remove-orphans'
    - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@docker86-h1" 'docker rmi registry.flexpay.co.za:5000/flexpay-funding-preprod'
    - ssh -i ~/.ssh/id_rsa -t -oStrictHostKeyChecking=no "dev_deploy@docker86-h1" 'cd /opt/docker/containers/flexpay-funding && docker-compose up -d'
  
  only:
    - "/^release/"

#
