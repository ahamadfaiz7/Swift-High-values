image: docker:20.10.14
services:
  - docker:20.10.14-dind

variables:
  GIT_STRATEGY: clone
  # Make sure that you get tags from git repository otherwise the release
  # Gradle plugin will not be able to create the next version number: 
  GIT_FETCH_EXTRA_FLAGS: --tags 
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.java.home=/opt/openjdk-17"
  APP_VERSION: $CI_PIPELINE_IID
  TAG_APP: flexpay-funding
  TAG_DEV: registry.flexpay.co.za:5000/$TAG_APP-dev
  TAG_PREPROD: registry.flexpay.co.za:5000/$TAG_APP-preprod
  TAG_PROD: registry.flexpay.co.za:5000/$TAG_APP-prod
  TAG_LATEST: registry.flexpay.co.za:5000/$TAG_APP:latest
  TAG_COMMIT: registry.flexpay.co.za:5000/$TAG_APP/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

before_script:
  - echo `pwd` # debug
  - echo "$CI_COMMIT_REF_SLUG, $CI_MERGE_REQUEST_TARGET_BRANCH_NAME, $CI_MERGE_REQUEST_TARGET_BRANCH_NAME, $CI_COMMIT_BRANCH, $CI_BUILD_NAME, $CI_BUILD_REF_NAME, $CI_COMMIT_REF_NAME, $CI_BUILD_STAGE, $CI_REGISTRY, $CI_REGISTRY_IMAGE, $CI_COMMIT_REF_NAME, $CI_COMMIT_SHORT_SHA, $CI_OPEN_MERGE_REQUESTS, $CI_PIPELINE_SOURCE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - echo $TAG_PREPROD


stages:
  - build
  - test
  - package
  - deploy


include:
  - template: Security/SAST.gitlab-ci.yml


build_dev:
  stage: build
  image: openjdk:17-alpine
  script:
    - ./gradlew  build 
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 2 hrs


spotbugs-sast:
  dependencies:
    - build_dev
  variables:
    SECURE_LOG_LEVEL: "debug"
    SAST_ANALYZER_IMAGE: "registry.gitlab.com/gitlab-org/security-products/analyzers/spotbugs:2.28.4"
    COMPILE: "false"
  artifacts:
    reports:
      sast: gl-sast-report.json


test:
  stage: test
  image: openjdk:17-alpine
  script: ./gradlew check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

